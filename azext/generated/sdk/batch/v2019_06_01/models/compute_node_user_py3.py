# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ComputeNodeUser(Model):
    """A user Account for RDP or SSH access on a Compute Node.

    All required parameters must be populated in order to send to Azure.

    :param name: Required. The user name of the Account.
    :type name: str
    :param is_admin: Whether the Account should be an administrator on the
     Compute Node. The default value is false.
    :type is_admin: bool
    :param expiry_time: The time at which the Account should expire. If
     omitted, the default is 1 day from the current time. For Linux Compute
     Nodes, the expiryTime has a precision up to a day.
    :type expiry_time: datetime
    :param password: The password of the Account. The password is required for
     Windows Compute Nodes (those created with 'cloudServiceConfiguration', or
     created with 'virtualMachineConfiguration' using a Windows Image
     reference). For Linux Compute Nodes, the password can optionally be
     specified along with the sshPublicKey property.
    :type password: str
    :param ssh_public_key: The SSH public key that can be used for remote
     login to the Compute Node. The public key should be compatible with
     OpenSSH encoding and should be base 64 encoded. This property can be
     specified only for Linux Compute Nodes. If this is specified for a Windows
     Compute Node, then the Batch service rejects the request; if you are
     calling the REST API directly, the HTTP status code is 400 (Bad Request).
    :type ssh_public_key: str
    """

    _validation = {
        'name': {'required': True},
    }

    _attribute_map = {
        'name': {'key': 'name', 'type': 'str'},
        'is_admin': {'key': 'isAdmin', 'type': 'bool'},
        'expiry_time': {'key': 'expiryTime', 'type': 'iso-8601'},
        'password': {'key': 'password', 'type': 'str'},
        'ssh_public_key': {'key': 'sshPublicKey', 'type': 'str'},
    }

    def __init__(self, *, name: str, is_admin: bool=None, expiry_time=None, password: str=None, ssh_public_key: str=None, **kwargs) -> None:
        super(ComputeNodeUser, self).__init__(**kwargs)
        self.name = name
        self.is_admin = is_admin
        self.expiry_time = expiry_time
        self.password = password
        self.ssh_public_key = ssh_public_key
